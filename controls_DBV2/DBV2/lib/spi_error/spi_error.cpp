#include <Adafruit_MLX90614.h>
#include <Wire.h>
#include <mbed.h>
#include "Arduino.h"
// SPI number of registers to write
#define NO_OF_REGISTERS 131

using namespace mbed;

namespace abc{


SPI spik(PC_3, PC_2, PI_1, PI_0);
// Threshold values
float Temp1_THR = 60;
float Humidity1_THR = 2;
float Temp2_THR = 60;
float Humidity2_THR = 2;
float current1LTC_THR = 0;
float current1INA_THR = 0;
float current2INA_THR = 0;
float current3INA_THR = 0;
float current4INA_THR = 0;
float current5INA_THR = 0;

uint32_t regValues[6][NO_OF_REGISTERS]= {{0x008D00,0x008C27,0x008B10,0x008A00,0x008900,0x008800,0x008700,0x008604,0x0085C3,0x008450,0x008380,0x008200,0x008100,0x008000,0x007FC4,0x007EC3,0x007D50,0x007C80,0x007B00,0x007A00,0x007900,0x0078A4,0x0077C3,0x007650,0x007580,0x007400,0x007300,0x007200,0x007184,0x0070C3,0x006F50,0x006E80,0x006D00,0x006C00,0x006B00,0x006A64,0x0069A1,0x0068B8,0x006780,0x006600,0x006500,0x006400,0x006345,0x006241,0x00613C,0x00603F,0x005FFF,0x005EEC,0x005D61,0x005C25,0x005B00,0x005AFA,0x005980,0x005800,0x005700,0x005600,0x005500,0x005400,0x005300,0x005219,0x005100,0x005000,0x004F00,0x004EFB,0x004D00,0x004C00,0x004B00,0x004A00,0x004900,0x004800,0x004700,0x00460A,0x004500,0x0044FF,0x004300,0x004200,0x004100,0x004000,0x003F03,0x003E00,0x003D00,0x003C00,0x003B00,0x003A01,0x003900,0x002D00,0x002C00,0x002B00,0x002A00,0x002900,0x002800,0x002752,0x0026FA,0x0025FA,0x0024F2,0x002341,0x002204,0x002120,0x002000,0x001F32,0x001E0A,0x001D00,0x001C1F,0x001B08,0x001A00,0x001901,0x001800,0x001703,0x0016E8,0x001500,0x001400,0x001300,0x00122C,0x001100,0x00105F,0x000F00,0x000E00,0x000D00,0x000C00,0x000B00,0x000A00,0x000900,0x000800,0x000700,0x000600,0x000500,0x000400,0x000300,0x000201,0x000100,0x000018}, {0x008D00,0x008C27,0x008B10,0x008A00,0x008900,0x008800,0x008700,0x008604,0x0085C3,0x008450,0x008380,0x008200,0x008100,0x008000,0x007FC4,0x007EC3,0x007D50,0x007C80,0x007B00,0x007A00,0x007900,0x0078A4,0x0077C3,0x007650,0x007580,0x007400,0x007300,0x007200,0x007184,0x0070C3,0x006F50,0x006E80,0x006D00,0x006C00,0x006B00,0x006A64,0x0069A1,0x0068B8,0x006780,0x006600,0x006500,0x006400,0x006345,0x006241,0x00613C,0x00603F,0x005FFF,0x005EEC,0x005D61,0x005C25,0x005B00,0x005AFA,0x005980,0x005800,0x005700,0x005600,0x005500,0x005400,0x005300,0x005219,0x005100,0x005000,0x004F00,0x004EFB,0x004D00,0x004C00,0x004B00,0x004A00,0x004900,0x004800,0x004700,0x00460A,0x004500,0x0044FF,0x004300,0x004200,0x004100,0x004000,0x003F03,0x003E00,0x003D00,0x003C00,0x003B00,0x003A01,0x003900,0x002D00,0x002C00,0x002B00,0x002A00,0x002900,0x002800,0x002752,0x0026FA,0x0025FA,0x0024F2,0x002341,0x002204,0x002120,0x002000,0x001F32,0x001E0A,0x001D00,0x001C1F,0x001B08,0x001A00,0x001901,0x001800,0x001703,0x0016E8,0x001500,0x001400,0x001300,0x00122C,0x001100,0x00105F,0x000F00,0x000E00,0x000D00,0x000C00,0x000B00,0x000A00,0x000900,0x000800,0x000700,0x000600,0x000500,0x000400,0x000300,0x000201,0x000100,0x000018}, {0x008D00,0x008C27,0x008B10,0x008A00,0x008900,0x008800,0x008700,0x008604,0x0085C3,0x008450,0x008380,0x008200,0x008100,0x008000,0x007FC4,0x007EC3,0x007D50,0x007C80,0x007B00,0x007A00,0x007900,0x0078A4,0x0077C3,0x007650,0x007580,0x007400,0x007300,0x007200,0x007184,0x0070C3,0x006F50,0x006E80,0x006D00,0x006C00,0x006B00,0x006A64,0x0069A1,0x0068B8,0x006780,0x006600,0x006500,0x006400,0x006345,0x006241,0x00613C,0x00603F,0x005FFF,0x005EEC,0x005D61,0x005C25,0x005B00,0x005AFA,0x005980,0x005800,0x005700,0x005600,0x005500,0x005400,0x005300,0x005219,0x005100,0x005000,0x004F00,0x004EFB,0x004D00,0x004C00,0x004B00,0x004A00,0x004900,0x004800,0x004700,0x00460A,0x004500,0x0044FF,0x004300,0x004200,0x004100,0x004000,0x003F03,0x003E00,0x003D00,0x003C00,0x003B00,0x003A01,0x003900,0x002D00,0x002C00,0x002B00,0x002A00,0x002900,0x002800,0x002752,0x0026FA,0x0025FA,0x0024F2,0x002341,0x002204,0x002120,0x002000,0x001F32,0x001E0A,0x001D00,0x001C1F,0x001B08,0x001A00,0x001901,0x001800,0x001703,0x0016E8,0x001500,0x001400,0x001300,0x00122C,0x001100,0x00105F,0x000F00,0x000E00,0x000D00,0x000C00,0x000B00,0x000A00,0x000900,0x000800,0x000700,0x000600,0x000500,0x000400,0x000300,0x000201,0x000100,0x000018}, {0x008D00,0x008C27,0x008B10,0x008A00,0x008900,0x008800,0x008700,0x008604,0x0085C3,0x008450,0x008380,0x008200,0x008100,0x008000,0x007FC4,0x007EC3,0x007D50,0x007C80,0x007B00,0x007A00,0x007900,0x0078A4,0x0077C3,0x007650,0x007580,0x007400,0x007300,0x007200,0x007184,0x0070C3,0x006F50,0x006E80,0x006D00,0x006C00,0x006B00,0x006A64,0x0069A1,0x0068B8,0x006780,0x006600,0x006500,0x006400,0x006345,0x006241,0x00613C,0x00603F,0x005FFF,0x005EEC,0x005D61,0x005C25,0x005B00,0x005AFA,0x005980,0x005800,0x005700,0x005600,0x005500,0x005400,0x005300,0x005219,0x005100,0x005000,0x004F00,0x004EFB,0x004D00,0x004C00,0x004B00,0x004A00,0x004900,0x004800,0x004700,0x00460A,0x004500,0x0044FF,0x004300,0x004200,0x004100,0x004000,0x003F03,0x003E00,0x003D00,0x003C00,0x003B00,0x003A01,0x003900,0x002D00,0x002C00,0x002B00,0x002A00,0x002900,0x002800,0x002752,0x0026FA,0x0025FA,0x0024F2,0x002341,0x002204,0x002120,0x002000,0x001F32,0x001E0A,0x001D00,0x001C1F,0x001B08,0x001A00,0x001901,0x001800,0x001703,0x0016E8,0x001500,0x001400,0x001300,0x00122C,0x001100,0x00105F,0x000F00,0x000E00,0x000D00,0x000C00,0x000B00,0x000A00,0x000900,0x000800,0x000700,0x000600,0x000500,0x000400,0x000300,0x000201,0x000100,0x000018}, {0x008D00,0x008C27,0x008B10,0x008A00,0x008900,0x008800,0x008700,0x008604,0x0085C3,0x008450,0x008380,0x008200,0x008100,0x008000,0x007FC4,0x007EC3,0x007D50,0x007C80,0x007B00,0x007A00,0x007900,0x0078A4,0x0077C3,0x007650,0x007580,0x007400,0x007300,0x007200,0x007184,0x0070C3,0x006F50,0x006E80,0x006D00,0x006C00,0x006B00,0x006A64,0x0069A1,0x0068B8,0x006780,0x006600,0x006500,0x006400,0x006345,0x006241,0x00613C,0x00603F,0x005FFF,0x005EEC,0x005D61,0x005C25,0x005B00,0x005AFA,0x005980,0x005800,0x005700,0x005600,0x005500,0x005400,0x005300,0x005219,0x005100,0x005000,0x004F00,0x004EFB,0x004D00,0x004C00,0x004B00,0x004A00,0x004900,0x004800,0x004700,0x00460A,0x004500,0x0044FF,0x004300,0x004200,0x004100,0x004000,0x003F03,0x003E00,0x003D00,0x003C00,0x003B00,0x003A01,0x003900,0x002D00,0x002C00,0x002B00,0x002A00,0x002900,0x002800,0x002752,0x0026FA,0x0025FA,0x0024F2,0x002341,0x002204,0x002120,0x002000,0x001F32,0x001E0A,0x001D00,0x001C1F,0x001B08,0x001A00,0x001901,0x001800,0x001703,0x0016E8,0x001500,0x001400,0x001300,0x00122C,0x001100,0x00105F,0x000F00,0x000E00,0x000D00,0x000C00,0x000B00,0x000A00,0x000900,0x000800,0x000700,0x000600,0x000500,0x000400,0x000300,0x000201,0x000100,0x000018}};


void spiWriteSequence(int spi_config)
{
  
    uint8_t i;
    for (i = 0; i < NO_OF_REGISTERS; i++) {
	digitalWrite(PI_0, LOW);            // Drive the CS LOW.
	spik.write(regValues[spi_config][i]);
	digitalWrite(PI_0, HIGH);  
    }
    
}

int errorDisplay(float temperature1, float humidity1, float temperature2, float humidity2,  float current1LTC)
{
  int err = 0;
  if(temperature1 > Temp1_THR)
    err = err | 16;
  if(humidity1 > Humidity1_THR)
    err = err | 8;
    if(temperature1 > Temp2_THR)
    err = err | 4;
  if(humidity1 > Humidity2_THR)
    err = err | 2;
  if(current1LTC > current1LTC_THR)
    err = err | 1;
   return err;
}

}  

